{"version":3,"sources":["components/navbar/navbar.component.jsx","components/header/header.component.jsx","components/searchbox/searchbox.component.jsx","components/bookswrapper/bookswrapper.component.jsx","util/useFetch.jsx","components/bookbox/bookbox.component.jsx","components/contentbox/contentBox.component.jsx","App.js","registerServiceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","Navbar","classes","className","AppBar","position","Toolbar","variant","Typography","color","to","Header","padding","display","alignItems","margin","background","boxShadow","transform","input","marginLeft","flex","width","iconButton","CustomizedInputBase","props","Paper","component","onSubmit","e","preventDefault","onChange","currentTarget","elements","value","InputBase","placeholder","inputProps","autoFocus","IconButton","type","aria-label","Bookswrapper","accessory","children","useFetch","url","reFetchToggle","useState","data","setData","useEffect","a","axios","get","res","dataArr","console","log","fetchData","Bookbox","React","open","setOpen","message","setMessage","handleClose","reason","handleSaveOnClick","target","closest","getAttribute","JSON","parse","title","authors","description","thumbnail","imageLinks","infoLink","gbID","post","image","link","status","response","code","handleDeleteOnClick","id","delete","setReloadToggler","reloadToggler","style","src","alt","map","author","i","arr","key","length","Button","href","isSearch","onClick","stringify","_id","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","onClose","action","Fragment","size","fontSize","ContentBox","searchQuery","setSearchQuery","fetchUrl","setFetchUrl","searchboxAccessory","useMemo","uniqueBooksArr","Map","items","item","values","books","book","volumeInfo","App","exact","path","render","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","catch","error","ReactDOM","document","getElementById","URL","process","origin","addEventListener","fetch","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.09772178.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\n// import IconButton from \"@material-ui/core/IconButton\";\n// import MenuIcon from \"@material-ui/icons/Menu\";\n\nimport \"./navbar.style.scss\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n}));\n\nexport default function Navbar() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Toolbar variant=\"dense\">\n          <Typography variant=\"h6\" color=\"inherit\" className=\"logo\">\n            Google Books\n          </Typography>\n          <Link to=\"/\" className=\"link\">\n            Search\n          </Link>\n          <Link to=\"/saved\" className=\"link\">\n            Saved\n          </Link>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n","import React from \"react\";\n\nimport \"./header.style.scss\";\n\nexport default function Header() {\n  // const classes = useStyles();\n\n  return (\n    <header className=\"header\">\n      <h1>React Google Books Search</h1>\n      {/* <p>Search for and Save books of Interest</p> */}\n    </header>\n  );\n}\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport InputBase from \"@material-ui/core/InputBase\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport SearchIcon from \"@material-ui/icons/Search\";\n\nimport \"./searchbox.style.scss\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    padding: \"2px 4px\",\n    display: \"flex\",\n    alignItems: \"center\",\n    \"max-width\": \"60%\",\n    margin: \"30px auto\",\n    background: \"linear-gradient(90deg, #3a47d5 0%, #00d2ff 100%) !important\",\n    boxShadow: `5px 5px 0px 0px #289fed, 10px 10px 0px 0px #5fb8ff,\n    15px 15px 0px 0px #a1d8ff, 20px 20px 0px 0px #cae6ff,\n    25px 25px 0px 0px #e1eeff, 5px 5px 15px 5px rgba(0, 0, 0, 0);`,\n    transform: \"translateX(-25px)\",\n  },\n  input: {\n    marginLeft: theme.spacing(1),\n    flex: 1,\n    width: \"350px\",\n  },\n  iconButton: {\n    padding: \"10px\",\n    \"margin-right\": \"auto\",\n    // color: \"#fff\",\n    // justifyContent: \"flex-start\",\n  },\n}));\n\nexport default function CustomizedInputBase(props) {\n  const classes = useStyles();\n\n  //* Set search query to parent comp(contentBox) only when the form is submitted\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    props.onChange(e.currentTarget.elements[0].value);\n\n    // console.log(\n    //   \"🏓inside handle submit value\",\n    //   e.currentTarget.elements[0].value\n    // );\n  };\n\n  // console.log(\"⚽️\", props);\n  return (\n    <Paper\n      component=\"form\"\n      className={`${classes.root} searchbox`}\n      onSubmit={handleSubmit}\n    >\n      <InputBase\n        className={classes.input}\n        placeholder=\"What do you feel to search? 💭\"\n        inputProps={{ \"aria-label\": \"search books\", autoFocus: true }}\n      />\n\n      <IconButton\n        type=\"submit\"\n        className={classes.iconButton}\n        aria-label=\"search\"\n      >\n        <SearchIcon />\n      </IconButton>\n    </Paper>\n  );\n}\n\n// import { makeStyles } from \"@material-ui/core/styles\";\n// import TextField from \"@material-ui/core/TextField\";\n// import Button from \"@material-ui/core/Button\";\n// import \"./searchbox.style.scss\";\n\n// export default function Searchbox() {\n//   return (\n//     <form noValidate autoComplete=\"off\" className=\"searchForm\">\n//       <h3>Book Search</h3>\n//       <TextField id=\"standard-basic\" label=\"Standard\" />\n//       <Button\n//         type=\"submit\"\n//         variant=\"contained\"\n//         color=\"primary\"\n//         className=\"searchBtn\"\n//       >\n//         Search\n//       </Button>\n//       {/* <TextField id=\"outlined-basic\" label=\"Outlined\" variant=\"outlined\" /> */}\n//     </form>\n//   );\n// }\n","import React from \"react\";\n\nconst Bookswrapper = (props) => {\n  // console.log(\"🎱props:\", props);\n  return (\n    <div>\n      {props.accessory}\n      {props.children}\n    </div>\n  );\n};\n\nexport default Bookswrapper;\n","import { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\n//! Fetch data or return null\nconst useFetch = (url, reFetchToggle) => {\n  const [data, setData] = useState(\"\");\n\n  useEffect(() => {\n    if (url) {\n      //* When url exists\n      const fetchData = async () => {\n        try {\n          const res = await axios.get(url);\n          const dataArr = res.data;\n\n          setData(dataArr);\n        } catch (err) {\n          console.log(\"🚨\", err);\n        }\n      };\n\n      fetchData();\n    } else {\n      //* When url doesn't exists\n      setData(null);\n    }\n  }, [url, reFetchToggle]);\n\n  return data;\n};\n\nexport default useFetch;\n","import React from \"react\";\nimport axios from \"axios\";\nimport Button from \"@material-ui/core/Button\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport \"./bookbox.style.scss\";\n\nconst Bookbox = (props) => {\n  const [open, setOpen] = React.useState(false);\n  const [message, setMessage] = React.useState(\"\");\n\n  //* Alert handlers\n  const handleClose = (e, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n\n    setOpen(false);\n  };\n\n  //* Save button event handler\n  const handleSaveOnClick = async (e) => {\n    const data = e.target.closest(\"button\").getAttribute(\"data\");\n    const {\n      title,\n      authors,\n      description,\n      imageLinks: { thumbnail },\n      infoLink,\n      gbID,\n    } = JSON.parse(data);\n\n    // console.log(\"🍮 data:\", JSON.parse(data), gbID);\n\n    //* Save a book to DB\n    try {\n      const result = await axios.post(\"/api/books\", {\n        title,\n        authors,\n        description,\n        image: thumbnail,\n        link: infoLink,\n        gbID,\n      });\n\n      // console.log(\"🐭 create a book result: \", result);\n\n      //* Set a popup message for user feedback\n      if (result.data.status === \"success\") {\n        setMessage(\"📚 The book is saved!\");\n        setOpen(true);\n      }\n    } catch (err) {\n      // console.log(\"🐭 create a book result(err):\", err.response.data);\n\n      if (err.response.data.code === \"duplicated Book\") {\n        setMessage(err.response.data.message);\n        setOpen(true);\n      }\n    }\n  };\n\n  //* Delete button event handler\n  const handleDeleteOnClick = async (e) => {\n    const id = e.target.closest(\"button\").getAttribute(\"id\");\n    // console.log(\"🍭\", id);\n    await axios.delete(`/api/books/${id}`);\n\n    //* Reload whole page\n    // window.location.reload();\n\n    //* Refresh data without reloading whole page\n    // console.log(\"🐹reloadToggler:\", props.reloadToggler);\n    props.setReloadToggler(!props.reloadToggler);\n  };\n\n  return (\n    <div className=\"bookbox\">\n      {/* {console.log(\"🏉 props\", props)} */}\n      <img\n        style={{ width: \"128px\" }}\n        src={\n          props.imageLinks\n            ? props.imageLinks.thumbnail\n            : props.image\n            ? props.image\n            : \"https://books.google.com/googlebooks/images/no_cover_thumb.gif\"\n        }\n        alt={`book-cover-${props.title}`}\n      ></img>\n      <div className=\"bookbox-text\">\n        <div className=\"bookbox-top\">\n          <p className=\"bookbox-title\">\n            <span className=\"bookbox-title--main\">{props.title}</span>\n            {props.authors && (\n              <span className=\"bookbox-authors\">\n                {`Written By `}\n                {props.authors.map((author, i, arr) => (\n                  <span\n                    key={`${props.infoLink ? props.infoLink : props.link}-${i}`}\n                  >\n                    {i !== arr.length - 1 ? `${author}, ` : `${author}`}\n                  </span>\n                ))}\n              </span>\n            )}\n          </p>\n          <div className=\"bookbox-button\">\n            <Button\n              variant=\"outlined\"\n              color=\"primary\"\n              href={props.infoLink ? props.infoLink : props.link}\n              target=\"_blank\"\n            >\n              View\n            </Button>\n            {props.isSearch ? (\n              <Button\n                variant=\"outlined\"\n                color=\"secondary\"\n                target=\"_blank\"\n                onClick={handleSaveOnClick}\n                data={JSON.stringify(props)}\n              >\n                Save\n              </Button>\n            ) : (\n              <Button\n                variant=\"outlined\"\n                color=\"secondary\"\n                target=\"_blank\"\n                onClick={handleDeleteOnClick}\n                id={props._id}\n              >\n                Delete\n              </Button>\n            )}\n          </div>\n        </div>\n\n        <p className=\"bookbox-desc\">{props.description}</p>\n      </div>\n      <Snackbar\n        anchorOrigin={{\n          vertical: \"top\",\n          horizontal: \"center\",\n        }}\n        open={open}\n        autoHideDuration={1500}\n        onClose={handleClose}\n        message={message}\n        action={\n          <React.Fragment>\n            <IconButton\n              size=\"small\"\n              aria-label=\"close\"\n              color=\"inherit\"\n              onClick={handleClose}\n            >\n              <CloseIcon fontSize=\"small\" />\n            </IconButton>\n          </React.Fragment>\n        }\n      />\n    </div>\n  );\n};\n\nexport default Bookbox;\n\n//volumeInfo : authors(arr), description, imageLinks,infoLink , title\n","import React, { useState, useEffect, useMemo } from \"react\";\nimport Searchbox from \"../searchbox/searchbox.component\";\nimport Bookswrapper from \"../bookswrapper/bookswrapper.component\";\nimport useFetch from \"../../util/useFetch\";\nimport Bookbox from \"../bookbox/bookbox.component\";\n\nconst ContentBox = ({ isSearch }) => {\n  //! State\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [fetchUrl, setFetchUrl] = useState(null);\n  const [reloadToggler, setReloadToggler] = useState(false);\n\n  //! Dinamically renders <Searchbox> based on pages(\"/\" or \"/saved\").\n  const searchboxAccessory = useMemo(() => {\n    return isSearch && <Searchbox onChange={setSearchQuery} />;\n  }, [isSearch]);\n\n  //! Set fetch url and query according to 3 cases\n  useEffect(() => {\n    //* 1. Search page with Google books\n    if (isSearch && searchQuery) {\n      setFetchUrl(\n        `https://www.googleapis.com/books/v1/volumes?q=${searchQuery}`\n      );\n      setSearchQuery(\"\");\n    }\n\n    //* 2. Saved page with MongoDB data\n    if (!isSearch) {\n      setFetchUrl(`/api/books`);\n      setSearchQuery(\"\");\n    }\n\n    //* 3. Search page with no search result(reset when returning back to search page from saved page)\n    if (isSearch && !searchQuery) {\n      setFetchUrl(\"\");\n    }\n  }, [searchQuery, isSearch, reloadToggler]);\n\n  //! Fetch data\n  const data = useFetch(fetchUrl, reloadToggler);\n  // console.log(\"🥰data\", data);\n\n  //! Filter out duplicated book for searched books\n  let uniqueBooksArr = [];\n  if (data && isSearch) {\n    if (data) {\n      uniqueBooksArr = [\n        ...new Map(data.items.map((item) => [item.id, item])).values(),\n      ];\n    }\n  } else {\n  }\n\n  return (\n    <div>\n      {/* {console.log(\n        \"🥜isSearch:\",\n        isSearch,\n        \"data:\",\n        data,\n        \"query:\",\n        searchQuery,\n        \"fetchUrl:\",\n        fetchUrl\n      )} */}\n      <Bookswrapper title={\"title\"} accessory={searchboxAccessory} books={data}>\n        {/* Cases: 1.Search page with query result, 2.Saved page 3.Search page with no data */}\n        {isSearch && data\n          ? uniqueBooksArr.map((book, i) => (\n              <Bookbox\n                key={`searched-${book.id}-${i}`}\n                {...book.volumeInfo}\n                gbID={book.id}\n                isSearch\n              />\n            ))\n          : !isSearch && data && data.type\n          ? data.items.map((book, i) => (\n              <Bookbox\n                key={`saved-${book.id}-${i}`}\n                id={book.id}\n                {...book}\n                reloadToggler={reloadToggler}\n                setReloadToggler={setReloadToggler}\n              />\n            ))\n          : \"\"}\n      </Bookswrapper>\n    </div>\n  );\n};\n\nexport default ContentBox;\n","import React from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\n\nimport Navbar from \"./components/navbar/navbar.component\";\nimport Header from \"./components/header/header.component\";\nimport ContentBox from \"./components/contentbox/contentBox.component\";\n\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Navbar />\n      <Header />\n      <Switch>\n        <Route\n          exact\n          path=\"/\"\n          render={(props) => <ContentBox {...props} isSearch />}\n        />\n        <Route\n          path=\"/saved\"\n          render={(props) => <ContentBox {...props} isSearch={false} />}\n        />\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log(\"New content is available; please refresh.\");\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport registerServiceWorker from \"./registerServiceWorker\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\nregisterServiceWorker();\n"],"sourceRoot":""}