{"version":3,"sources":["components/navbar/navbar.component.jsx","components/header/header.component.jsx","components/searchbox/searchbox.component.jsx","components/bookswrapper/bookswrapper.component.jsx","util/useFetch.jsx","components/bookbox/bookbox.component.jsx","components/contentbox/contentBox.component.jsx","App.js","registerServiceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","Navbar","classes","className","AppBar","position","Toolbar","variant","Typography","color","to","Header","padding","display","alignItems","width","margin","input","marginLeft","flex","iconButton","CustomizedInputBase","props","console","log","Paper","component","onSubmit","e","preventDefault","onChange","currentTarget","elements","value","InputBase","placeholder","inputProps","IconButton","type","aria-label","Bookswrapper","accessory","children","useFetch","url","useState","data","setData","useEffect","a","axios","get","res","dataArr","fetchData","Bookbox","handleSaveOnClick","target","closest","getAttribute","JSON","parse","title","authors","description","thumbnail","imageLinks","infoLink","post","image","link","result","handleDeleteOnClick","id","delete","window","location","reload","style","src","alt","map","author","i","arr","key","length","Button","href","isSearch","onClick","stringify","_id","ContentBox","searchQuery","setSearchQuery","fetchUrl","setFetchUrl","searchboxAccessory","useMemo","uniqueBooksArr","Map","items","item","values","books","book","volumeInfo","App","exact","path","render","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","catch","error","ReactDOM","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","indexOf","ready","unregister","checkValidServiceWorker","registerServiceWorker"],"mappings":"wVAWA,MAAMA,EAAYC,YAAYC,IAAD,CAC3BC,KAAM,CACJC,SAAU,GAEZC,WAAY,CACVC,YAAaJ,EAAMK,QAAQ,OAIhB,SAASC,IACtB,MAAMC,EAAUT,IAEhB,OACE,yBAAKU,UAAWD,EAAQN,MACtB,kBAACQ,EAAA,EAAD,CAAQC,SAAS,UACf,kBAACC,EAAA,EAAD,CAASC,QAAQ,SACf,kBAACC,EAAA,EAAD,CAAYD,QAAQ,KAAKE,MAAM,WAA/B,gBAGA,kBAAC,IAAD,CAAMC,GAAG,IAAIP,UAAU,QAAvB,UAGA,kBAAC,IAAD,CAAMO,GAAG,SAASP,UAAU,QAA5B,Y,MC7BK,SAASQ,IAGtB,OACE,4BAAQR,UAAU,UAChB,yDACA,qE,uDCHN,MAAMV,EAAYC,YAAYC,IAAD,CAC3BC,KAAM,CACJgB,QAAS,UACTC,QAAS,OACTC,WAAY,SACZC,MAAO,IACPC,OAAQ,aAEVC,MAAO,CACLC,WAAYvB,EAAMK,QAAQ,GAC1BmB,KAAM,GAERC,WAAY,CACVR,QAAS,WAIE,SAASS,EAAoBC,GAC1C,MAAMpB,EAAUT,IAehB,OADA8B,QAAQC,IAAI,eAAMF,GAEhB,kBAACG,EAAA,EAAD,CAAOC,UAAU,OAAOvB,UAAWD,EAAQN,KAAM+B,SAb7BC,IACpBA,EAAEC,iBAEFP,EAAMQ,SAASF,EAAEG,cAAcC,SAAS,GAAGC,OAE3CV,QAAQC,IACN,yCACAI,EAAEG,cAAcC,SAAS,GAAGC,SAO5B,6BACE,kBAACC,EAAA,EAAD,CACE/B,UAAWD,EAAQe,MACnBkB,YAAY,SACZC,WAAY,CAAE,aAAc,mBAGhC,kBAACC,EAAA,EAAD,CACEC,KAAK,SACLnC,UAAWD,EAAQkB,WACnBmB,aAAW,UAEX,kBAAC,IAAD,QC1COC,MAVOlB,IACpBC,QAAQC,IAAI,qBAAYF,GAEtB,6BACGA,EAAMmB,UACNnB,EAAMoB,W,0CCwBEC,MA3BGC,IAAS,MAAD,EACAC,mBAAS,IADT,mBACjBC,EADiB,KACXC,EADW,KAwBxB,OArBAC,oBAAU,KACR,GAAIJ,EAAK,EAEQ,uCAAG,8BAAAK,EAAA,+EAEIC,IAAMC,IAAIP,GAFd,OAERQ,EAFQ,OAGRC,EAAUD,EAAIN,KAEpBC,EAAQM,GALM,gDAOd9B,QAAQC,IAAI,eAAZ,MAPc,yDAAH,qDAWf8B,QAGAP,EAAQ,OAET,CAACH,IAEGE,G,eCkFMS,MAxGEjC,IAEf,MAAMkC,EAAiB,uCAAG,WAAO5B,GAAP,6BAAAqB,EAAA,6DAClBH,EAAOlB,EAAE6B,OAAOC,QAAQ,UAAUC,aAAa,QAD7B,EAQpBC,KAAKC,MAAMf,GALbgB,EAHsB,EAGtBA,MACAC,EAJsB,EAItBA,QACAC,EALsB,EAKtBA,YACcC,EANQ,EAMtBC,WAAcD,UACdE,EAPsB,EAOtBA,SAPsB,SAWHjB,IAAMkB,KAAK,aAAc,CAC5CN,QACAC,UACAC,cACAK,MAAOJ,EACPK,KAAMH,IAhBgB,OAWlBI,EAXkB,OAmBxBhD,QAAQC,IAAI+C,GAnBY,2CAAH,sDAuBjBC,EAAmB,uCAAG,WAAO5C,GAAP,iBAAAqB,EAAA,6DACpBwB,EAAK7C,EAAE6B,OAAOC,QAAQ,UAAUC,aAAa,MACnDpC,QAAQC,IAAI,eAAMiD,GAFQ,SAGLvB,IAAMwB,OAAN,qBAA2BD,IAHtB,OAGpBF,EAHoB,OAK1BhD,QAAQC,IAAI+C,GACZI,OAAOC,SAASC,SANU,2CAAH,sDASzB,OACE,yBAAK1E,UAAU,WACZoB,QAAQC,IAAI,qBAAYF,GACzB,yBACEwD,MAAO,CAAE/D,MAAO,SAChBgE,IACEzD,EAAM4C,WACF5C,EAAM4C,WAAWD,UACjB3C,EAAM+C,MACN/C,EAAM+C,MACN,iEAENW,IAAG,qBAAgB1D,EAAMwC,SAE3B,yBAAK3D,UAAU,gBACb,yBAAKA,UAAU,eACb,uBAAGA,UAAU,iBACX,0BAAMA,UAAU,uBAAuBmB,EAAMwC,OAC5CxC,EAAMyC,SACL,0BAAM5D,UAAU,mBAAhB,cAEGmB,EAAMyC,QAAQkB,IAAI,CAACC,EAAQC,EAAGC,IAC7B,0BACEC,IAAG,UAAK/D,EAAM6C,SAAW7C,EAAM6C,SAAW7C,EAAMgD,KAA7C,YAAqDa,IAEvDA,IAAMC,EAAIE,OAAS,EAAnB,UAA0BJ,EAA1B,gBAA0CA,OAMrD,yBAAK/E,UAAU,kBACb,kBAACoF,EAAA,EAAD,CACEhF,QAAQ,WACRE,MAAM,UACN+E,KAAMlE,EAAM6C,SAAW7C,EAAM6C,SAAW7C,EAAMgD,KAC9Cb,OAAO,UAJT,QAQCnC,EAAMmE,SACL,kBAACF,EAAA,EAAD,CACEhF,QAAQ,WACRE,MAAM,YACNgD,OAAO,SACPiC,QAASlC,EACTV,KAAMc,KAAK+B,UAAUrE,IALvB,QAUA,kBAACiE,EAAA,EAAD,CACEhF,QAAQ,WACRE,MAAM,YACNgD,OAAO,SACPiC,QAASlB,EACTC,GAAInD,EAAMsE,KALZ,YAaN,uBAAGzF,UAAU,gBAAgBmB,EAAM0C,gBCvB5B6B,MA3EI,EAAGJ,eAAe,QAEG5C,mBAAS,IAFZ,mBAE5BiD,EAF4B,KAEfC,EAFe,OAGHlD,mBAAS,MAHN,mBAG5BmD,EAH4B,KAGlBC,EAHkB,KAM7BC,EAAqBC,kBAAQ,IAC1BV,GAAY,kBAAC,EAAD,CAAW3D,SAAUiE,IACvC,CAACN,IAGJzC,oBAAU,KAEJyC,GAAYK,IACdG,EAAY,iDAAD,OACwCH,IAEnDC,EAAe,KAIZN,IACHQ,EAAY,cACZF,EAAe,KAIbN,IAAaK,GACfG,EAAY,KAEb,CAACH,EAAaL,IAGjB,MAAM3C,EAAOH,EAASqD,GACtBzE,QAAQC,IAAI,mBAAUsB,GAGtB,IAAIsD,EAAiB,GAUrB,OATItD,GAAQ2C,GACN3C,IACFsD,EAAiB,IACZ,IAAIC,IAAIvD,EAAKwD,MAAMrB,IAAKsB,GAAS,CAACA,EAAK9B,GAAI8B,KAAQC,WAO1D,6BACGjF,QAAQC,IACP,wBACAiE,EACA,QACA3C,EACA,SACAgD,EACA,YACAE,GAEF,kBAAC,EAAD,CAAclC,MAAO,QAASrB,UAAWyD,EAAoBO,MAAO3D,GAEjE2C,GAAY3C,EACTsD,EAAenB,IAAKyB,GAClB,kBAAC,EAAD,eAASrB,IAAKqB,EAAKjC,IAAQiC,EAAKC,WAAhC,CAA4ClB,UAAQ,OAErDA,GAAY3C,EACbA,EAAKwD,MAAMrB,IAAKyB,GACd,kBAAC,EAAD,eAASrB,IAAKqB,EAAKjC,GAAIA,GAAIiC,EAAKjC,IAAQiC,KAE1C,M,MC9CGE,MApBf,WACE,OACE,yBAAKzG,UAAU,OACb,kBAACF,EAAD,MACA,kBAACU,EAAD,MACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEkG,OAAK,EACLC,KAAK,IACLC,OAASzF,GAAU,kBAAC,EAAD,iBAAgBA,EAAhB,CAAuBmE,UAAQ,OAEpD,kBAAC,IAAD,CACEqB,KAAK,SACLC,OAASzF,GAAU,kBAAC,EAAD,iBAAgBA,EAAhB,CAAuBmE,UAAU,UCZ9D,MAAMuB,EAAcC,QACW,cAA7BtC,OAAOC,SAASsC,UAEe,UAA7BvC,OAAOC,SAASsC,UAEhBvC,OAAOC,SAASsC,SAASC,MACvB,2DA6BN,SAASC,EAAgBC,GACvBC,UAAUC,cACPC,SAASH,GACTI,KAAKC,IACJA,EAAaC,cAAgB,KAC3B,MAAMC,EAAmBF,EAAaG,WACtCD,EAAiBE,cAAgB,KACA,cAA3BF,EAAiBG,QACfT,UAAUC,cAAcS,WAK1BzG,QAAQC,IAAI,6CAKZD,QAAQC,IAAI,2CAMrByG,MAAMC,IACL3G,QAAQ2G,MAAM,4CAA6CA,KC/DjEC,IAASpB,OACP,kBAAC,IAAD,KACE,kBAAC,EAAD,OAEFqB,SAASC,eAAe,SDSX,WACb,GAA6C,kBAAmBf,UAAW,CAGzE,GADkB,IAAIgB,IAAIC,GAAwB5D,OAAOC,UAC3C4D,SAAW7D,OAAOC,SAAS4D,OAIvC,OAGF7D,OAAO8D,iBAAiB,OAAQ,KAC9B,MAAMpB,EAAK,UAAMkB,GAAN,sBAENvB,EAwCX,SAAiCK,GAE/BqB,MAAMrB,GACHI,KAAKkB,IAGkB,MAApBA,EAASC,SACuD,IAAhED,EAASE,QAAQ1F,IAAI,gBAAgB2F,QAAQ,cAG7CxB,UAAUC,cAAcwB,MAAMtB,KAAKC,IACjCA,EAAasB,aAAavB,KAAK,KAC7B9C,OAAOC,SAASC,aAKpBuC,EAAgBC,KAGnBY,MAAM,KACL1G,QAAQC,IACN,mEAzDAyH,CAAwB5B,GAHxBD,EAAgBC,MCvBxB6B,K","file":"static/js/main.f5f42b78.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\n// import IconButton from \"@material-ui/core/IconButton\";\n// import MenuIcon from \"@material-ui/icons/Menu\";\n\nimport \"./navbar.style.scss\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n}));\n\nexport default function Navbar() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Toolbar variant=\"dense\">\n          <Typography variant=\"h6\" color=\"inherit\">\n            Google Books\n          </Typography>\n          <Link to=\"/\" className=\"link\">\n            Search\n          </Link>\n          <Link to=\"/saved\" className=\"link\">\n            Saved\n          </Link>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n","import React from \"react\";\n\nimport \"./header.style.scss\";\n\nexport default function Header() {\n  // const classes = useStyles();\n\n  return (\n    <header className=\"header\">\n      <h1>React Google Books Search</h1>\n      <p>Search for and Save books of Interest</p>\n    </header>\n  );\n}\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport InputBase from \"@material-ui/core/InputBase\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport SearchIcon from \"@material-ui/icons/Search\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    padding: \"2px 4px\",\n    display: \"flex\",\n    alignItems: \"center\",\n    width: 200,\n    margin: \"10px auto\",\n  },\n  input: {\n    marginLeft: theme.spacing(1),\n    flex: 1,\n  },\n  iconButton: {\n    padding: \"10px\",\n  },\n}));\n\nexport default function CustomizedInputBase(props) {\n  const classes = useStyles();\n\n  //* Set search query to parent comp(contentBox) only when the form is submitted\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    props.onChange(e.currentTarget.elements[0].value);\n\n    console.log(\n      \"üèìinside handle submit value\",\n      e.currentTarget.elements[0].value\n    );\n  };\n\n  console.log(\"‚öΩÔ∏è\", props);\n  return (\n    <Paper component=\"form\" className={classes.root} onSubmit={handleSubmit}>\n      <div>\n        <InputBase\n          className={classes.input}\n          placeholder=\"Search\"\n          inputProps={{ \"aria-label\": \"search books\" }}\n        />\n      </div>\n      <IconButton\n        type=\"submit\"\n        className={classes.iconButton}\n        aria-label=\"search\"\n      >\n        <SearchIcon />\n      </IconButton>\n    </Paper>\n  );\n}\n\n// import { makeStyles } from \"@material-ui/core/styles\";\n// import TextField from \"@material-ui/core/TextField\";\n// import Button from \"@material-ui/core/Button\";\n// import \"./searchbox.style.scss\";\n\n// export default function Searchbox() {\n//   return (\n//     <form noValidate autoComplete=\"off\" className=\"searchForm\">\n//       <h3>Book Search</h3>\n//       <TextField id=\"standard-basic\" label=\"Standard\" />\n//       <Button\n//         type=\"submit\"\n//         variant=\"contained\"\n//         color=\"primary\"\n//         className=\"searchBtn\"\n//       >\n//         Search\n//       </Button>\n//       {/* <TextField id=\"outlined-basic\" label=\"Outlined\" variant=\"outlined\" /> */}\n//     </form>\n//   );\n// }\n","import React from \"react\";\n\nconst Bookswrapper = (props) => {\n  console.log(\"üé±props:\", props);\n  return (\n    <div>\n      {props.accessory}\n      {props.children}\n    </div>\n  );\n};\n\nexport default Bookswrapper;\n","import { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\n//! Fetch data or return null\nconst useFetch = (url) => {\n  const [data, setData] = useState(\"\");\n\n  useEffect(() => {\n    if (url) {\n      //* When url exists\n      const fetchData = async () => {\n        try {\n          const res = await axios.get(url);\n          const dataArr = res.data;\n\n          setData(dataArr);\n        } catch (err) {\n          console.log(\"üö®\", err);\n        }\n      };\n\n      fetchData();\n    } else {\n      //* When url doesn't exists\n      setData(null);\n    }\n  }, [url]);\n\n  return data;\n};\n\nexport default useFetch;\n","import React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport axios from \"axios\";\n\nimport \"./bookbox.style.scss\";\n\nconst Bookbox = (props) => {\n  //* Save button event handler\n  const handleSaveOnClick = async (e) => {\n    const data = e.target.closest(\"button\").getAttribute(\"data\");\n    const {\n      title,\n      authors,\n      description,\n      imageLinks: { thumbnail },\n      infoLink,\n    } = JSON.parse(data);\n\n    // console.log(\"üçÆ data:\", filteredData);\n    const result = await axios.post(\"/api/books\", {\n      title,\n      authors,\n      description,\n      image: thumbnail,\n      link: infoLink,\n    });\n\n    console.log(result);\n  };\n\n  //* Delete button event handler\n  const handleDeleteOnClick = async (e) => {\n    const id = e.target.closest(\"button\").getAttribute(\"id\");\n    console.log(\"üç≠\", id);\n    const result = await axios.delete(`/api/books/${id}`);\n\n    console.log(result);\n    window.location.reload();\n  };\n\n  return (\n    <div className=\"bookbox\">\n      {console.log(\"üèâ props\", props)}\n      <img\n        style={{ width: \"128px\" }}\n        src={\n          props.imageLinks\n            ? props.imageLinks.thumbnail\n            : props.image\n            ? props.image\n            : \"https://books.google.com/googlebooks/images/no_cover_thumb.gif\"\n        }\n        alt={`book-cover-${props.title}`}\n      ></img>\n      <div className=\"bookbox-text\">\n        <div className=\"bookbox-top\">\n          <p className=\"bookbox-title\">\n            <span className=\"bookbox-title--main\">{props.title}</span>\n            {props.authors && (\n              <span className=\"bookbox-authors\">\n                {`Written By `}\n                {props.authors.map((author, i, arr) => (\n                  <span\n                    key={`${props.infoLink ? props.infoLink : props.link}-${i}`}\n                  >\n                    {i !== arr.length - 1 ? `${author}, ` : `${author}`}\n                  </span>\n                ))}\n              </span>\n            )}\n          </p>\n          <div className=\"bookbox-button\">\n            <Button\n              variant=\"outlined\"\n              color=\"primary\"\n              href={props.infoLink ? props.infoLink : props.link}\n              target=\"_blank\"\n            >\n              View\n            </Button>\n            {props.isSearch ? (\n              <Button\n                variant=\"outlined\"\n                color=\"secondary\"\n                target=\"_blank\"\n                onClick={handleSaveOnClick}\n                data={JSON.stringify(props)}\n              >\n                Save\n              </Button>\n            ) : (\n              <Button\n                variant=\"outlined\"\n                color=\"secondary\"\n                target=\"_blank\"\n                onClick={handleDeleteOnClick}\n                id={props._id}\n              >\n                Delete\n              </Button>\n            )}\n          </div>\n        </div>\n\n        <p className=\"bookbox-desc\">{props.description}</p>\n      </div>\n    </div>\n  );\n};\n\nexport default Bookbox;\n\n//volumeInfo : authors(arr), description, imageLinks,infoLink , title\n","import React, { useState, useEffect, useMemo } from \"react\";\nimport Searchbox from \"../searchbox/searchbox.component\";\nimport Bookswrapper from \"../bookswrapper/bookswrapper.component\";\nimport useFetch from \"../../util/useFetch\";\nimport Bookbox from \"../bookbox/bookbox.component\";\n\nconst ContentBox = ({ isSearch }) => {\n  //! State\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [fetchUrl, setFetchUrl] = useState(null);\n\n  //! Dinamically renders <Searchbox> based on pages(\"/\" or \"/saved\").\n  const searchboxAccessory = useMemo(() => {\n    return isSearch && <Searchbox onChange={setSearchQuery} />;\n  }, [isSearch]);\n\n  //! Set fetch url and query according to 3 cases\n  useEffect(() => {\n    //* 1. Search page with Google books\n    if (isSearch && searchQuery) {\n      setFetchUrl(\n        `https://www.googleapis.com/books/v1/volumes?q=${searchQuery}`\n      );\n      setSearchQuery(\"\");\n    }\n\n    //* 2. Saved page with MongoDB data\n    if (!isSearch) {\n      setFetchUrl(`/api/books`);\n      setSearchQuery(\"\");\n    }\n\n    //* 3. Search page with no search result(when returning back to search page from saved page)\n    if (isSearch && !searchQuery) {\n      setFetchUrl(\"\");\n    }\n  }, [searchQuery, isSearch]);\n\n  //! Fetch data\n  const data = useFetch(fetchUrl);\n  console.log(\"ü•∞data\", data);\n\n  //! Filter out duplicated book for searched books\n  let uniqueBooksArr = [];\n  if (data && isSearch) {\n    if (data) {\n      uniqueBooksArr = [\n        ...new Map(data.items.map((item) => [item.id, item])).values(),\n      ];\n    }\n  } else {\n  }\n\n  return (\n    <div>\n      {console.log(\n        \"ü•úisSearch:\",\n        isSearch,\n        \"data:\",\n        data,\n        \"query:\",\n        searchQuery,\n        \"fetchUrl:\",\n        fetchUrl\n      )}\n      <Bookswrapper title={\"title\"} accessory={searchboxAccessory} books={data}>\n        {/* Cases: 1.search page with no data 2.search page with query result, 3.saved page */}\n        {isSearch && data\n          ? uniqueBooksArr.map((book) => (\n              <Bookbox key={book.id} {...book.volumeInfo} isSearch />\n            ))\n          : !isSearch && data\n          ? data.items.map((book) => (\n              <Bookbox key={book.id} id={book.id} {...book} />\n            ))\n          : \"\"}\n      </Bookswrapper>\n    </div>\n  );\n};\n\nexport default ContentBox;\n","import React from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\n\nimport Navbar from \"./components/navbar/navbar.component\";\nimport Header from \"./components/header/header.component\";\nimport ContentBox from \"./components/contentbox/contentBox.component\";\n\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Navbar />\n      <Header />\n      <Switch>\n        <Route\n          exact\n          path=\"/\"\n          render={(props) => <ContentBox {...props} isSearch />}\n        />\n        <Route\n          path=\"/saved\"\n          render={(props) => <ContentBox {...props} isSearch={false} />}\n        />\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log(\"New content is available; please refresh.\");\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport registerServiceWorker from \"./registerServiceWorker\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\nregisterServiceWorker();\n"],"sourceRoot":""}